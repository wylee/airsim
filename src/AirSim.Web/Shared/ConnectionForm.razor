@implements IDisposable
@inject ILogger<ConnectionForm> logger
@inject Store Store

<EditForm Model="connectionData" OnValidSubmit="ValidSubmit" class="d-flex flex-column w-50 m-2">

    <DataAnnotationsValidator />

    <fieldset class="mb-4">
        <label for="name">Name</label>

        <InputText id="name"
                   type="text"
                   required
                   placeholder="Name"
                   class="form-control"
                   @bind-Value="connectionData.Name" />

        <ValidationMessage For="@(() => connectionData.Name)" />
    </fieldset>

    <fieldset class="container-fluid mb-4">
        <label>Role</label>

        <div class="row py-2 bg-white border rounded">
            <InputRadioGroup @bind-Value="connectionData.Role">

                @foreach (var role in GetRoles())
                {
                    <div class="col">
                        <InputRadio id="@role" required Value="@role" />
                        <label for="@role" class="pointer">
                            @role
                        </label>
                    </div>
                }

            </InputRadioGroup>
        </div>

        <ValidationMessage For="@(() => connectionData.Name)" />
    </fieldset>

    <div class="d-flex justify-content-center">
        <button type="submit" class="btn btn-primary">
            Connect
        </button>
    </div>

</EditForm>

@code {
    protected override void OnInitialized() => Store.OnChange += StateHasChanged;
    public void Dispose() => Store.OnChange -= StateHasChanged;

    private ConnectionData connectionData = new ConnectionData();

    private List<string> GetRoles()
    {
        var roles = new List<string>();
        foreach (Role role in Enum.GetValues(typeof(Role)))
        {
            if (role != Role.None)
            {
                roles.Add(role.ToString("f"));
            }
        }
        return roles;
    }

    private void ValidSubmit() => Store.ConnectUser(connectionData.Name!, connectionData.Role);
}
